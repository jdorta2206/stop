
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // La colección 'rankings' almacena los perfiles públicos y puntuaciones.
    match /rankings/{userId} {
      // CUALQUIERA puede leer el ranking global (lecturas de lista).
      allow list; 
      
      // Un usuario autenticado PUEDE LEER el perfil de otro si conoce su ID.
      // Esto es clave para cargar los datos de los amigos en el ranking.
      allow get: if request.auth != null;

      // Un usuario SOLO PUEDE ESCRIBIR en su propio documento de ranking.
      allow write: if request.auth != null && request.auth.uid == userId;

      // Subcolección de amigos de un jugador.
      match /friends/{friendId} {
        // Un usuario SOLO PUEDE LEER Y ESCRIBIR su propia lista de amigos.
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Subcolección del historial de partidas de un jugador.
      match /gameHistory/{gameId} {
        // Un usuario SOLO PUEDE LEER Y ESCRIBIR su propio historial.
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Subcolección de notificaciones de un jugador.
      match /notifications/{notificationId} {
        // Un usuario SOLO PUEDE LEER Y ESCRIBIR sus propias notificaciones.
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // La colección 'rooms' gestiona las salas de juego multijugador.
    match /rooms/{roomId} {
      // CUALQUIER usuario autenticado puede leer, crear y actualizar una sala.
      // Esto permite unirse, ver jugadores, y actualizar estado (listo, etc.).
      allow read, create, update: if request.auth != null;
      
      // SOLO se puede borrar una sala si la petición viene del servidor (lógica futura).
      allow delete: if false;

      // Subcolección de chat de una sala.
      match /chat/{messageId} {
        // CUALQUIER usuario autenticado puede leer y escribir en el chat de una sala.
        allow read, write: if request.auth != null;
      }
    }
  }
}
