rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profiles, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Rules for subcollections
      match /friends/{friendId} {
        allow read, write: if request.auth.uid == userId;
      }

      match /notifications/{notificationId} {
        allow create: if request.auth != null;
        allow read, update, delete: if request.auth.uid == userId;
      }
    }
    
    match /rooms/{roomId} {
        allow read, create: if request.auth != null;
        // Allow updates only if the user is in the room's player list
        allow update: if request.auth != null && exists(/databases/$(database)/documents/rooms/$(roomId)) && request.auth.uid in resource.data.players;

        match /chat/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.players[request.auth.uid] != null;
        }
    }


    match /rankings/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
      
      match /gameHistory/{gameId} {
        allow read, create: if request.auth.uid == userId;
      }
    }
  }
}
