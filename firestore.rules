rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección 'users'
    match /users/{userId} {
      // Cualquier usuario autenticado puede leer el perfil público de otro.
      // Se permite la consulta 'list' solo si se filtra por IDs de documento,
      // lo cual es necesario para obtener los datos de una lista de amigos.
      allow read, list: if request.auth != null;
      
      // Un usuario solo puede escribir en su propio documento.
      allow write: if request.auth != null && request.auth.uid == userId;

      // Un usuario solo puede leer y escribir en su propia lista de amigos.
      match /friends/{friendId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Un usuario puede crear notificaciones para otros (necesario para enviar invitaciones).
      // Un usuario solo puede leer y actualizar sus propias notificaciones.
      match /notifications/{notificationId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null && request.auth.uid == userId;
      }
      
       // Un usuario solo puede leer su propio historial de partidas.
      match /gameHistory/{gameId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Reglas para la colección 'rooms'
    match /rooms/{roomId} {
      // Cualquier usuario autenticado puede leer o crear una sala.
      allow read, create: if request.auth != null;
      
      // Solo se puede actualizar una sala si el usuario que lo solicita es parte de ella.
      allow update: if request.auth != null && resource.data.players[request.auth.uid] != null;
      
      match /chat/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.players[request.auth.uid] != null;
      }
    }
  }
}
